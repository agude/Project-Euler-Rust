/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 *     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */
extern crate fibonacci;


fn euler_002(limit: u64) -> u64 {
    let mut sum: u64 = 0;

    // Run through all Fibonacci numbers using a iterator
    for i in fibonacci::Fibonacci::new()
        // Stopping after we hit the limit
        .take_while(|x| (*x as u64) < limit)
        // And only keeping those that are even
        .filter(|x| x % 2 == 0) {
            sum += i as u64;
        }

    return sum;
}


fn main() {
    let answer = euler_002(4_000_000);
    println!("{}", answer);
}


#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_problem_002() {
        assert_eq!(euler_002(4_000_000), 4613732);
    }
}
